#!/home/statsadmin/R/bin/Rscript

source('Step_0_init.R')

args <- commandArgs()
idx <- as.numeric(args[length(args)])
.libPaths('ysidi/lib')


dt.full.X <- readRDS(file = sprintf('dtfull{{TYPE}}_%d.rds',idx))

set.seed(8762+idx)

#generate {{MISSING}} for 5-25% by 5% DO
dt.{{MISSING}} <- miss.apply.do(dt.full.X, b.trt={{bTRT}}, b.y={{bY}}, b.X={{bX}}, do=0.{{PERCENT}})

dt.{{MISSING}}.check <- dt.{{MISSING}}%>%
  dplyr::mutate(do.H0 = purrr::map2(t.H0.m, 0.{{PERCENT}}, check.miss),
                do.H0 = purrr::map_dbl(do.H0, as.numeric),
                do.H1 = purrr::map2(t.H1.m, 0.{{PERCENT}}, check.miss),
                do.H1 = purrr::map_dbl(do.H1, as.numeric))%>%
  dplyr::select(-t.H0.m, -t.H1.m)


saveRDS(dt.{{MISSING}}.check,file = sprintf('{{TYPE}}doch{{MISSING}}{{PERCENT}}_%d.rds',idx))

saveRDS(dt.{{MISSING}},file = sprintf('dt{{TYPE}}{{MISSING}}{{PERCENT}}_%d.rds',idx))

#check missingness mechanism: randomly select two scenarios and calculate
#proportion of assigned missing for each probability value (rounded by 2 decimal points)
# for both MAR and MNAR there should be positive correlation

check.mech.{{MISSING}} <- dt.{{MISSING}}%>%
  dplyr::mutate(mech.H0  = purrr::map(t.H0.m , check.mech.p),
                mech.H1  = purrr::map(t.H1.m , check.mech.p))%>%
  dplyr::select(-t.H0.m, -t.H1.m)

saveRDS(check.mech.{{MISSING}},file = sprintf('mech{{MISSING}}{{TYPE}}{{PERCENT}}_%d.rds',idx))
